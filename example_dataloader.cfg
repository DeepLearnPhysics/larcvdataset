ThreadProcessor: {

  # set verbosity
  Verbosity:3

  # set number of threads that will be working to fill images
  NumThreads: 2

  # number of continers that the threads will fill
  # the most recent container is used when the data is retrieved from larcvdataset
  NumBatchStorage: 2

  # read the events in sequence or at random
  RandomAccess: false

  # the input files 
  InputFiles: ["/home/taritree/working/dlphysics/testset/practice_train_5k.root"]

  # define the processes that fill our batch.
  # here we define two: one that provides our images and another the labels

  ProcessName: ["image","label"] # the uniques names to give to our processes
  ProcessType: ["BatchFillerImage2D","BatchFillerPIDLabel"] # the type of processor the name above labels

  # here we store configuration parameters for the processes we declared above
  ProcessList: {
    # configure the BatchFillerImage2D processor
    image: {
      Verbosity:3
      ImageProducer: "data"
      Channels: [2]
      EnableMirror: false
    }
    # configure the BatchFillerPIDLabel processor
    label: {
      Verbosity:3
      ParticleProducer: "mctruth"
      # map the different classes to an index used by the network
      # the index is determined by the position of the pdg code
      # so here we have defined
      # {proton:0, e-:1, pi+:2, mu-:3, gamma:4 }
      PdgClassList: [2212,11,211,13,22] 
    }
  }
}